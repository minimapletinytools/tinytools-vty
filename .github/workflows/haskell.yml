name: Haskell CI

on:
  push:
    branches: [ "potato" ]
  pull_request:
    branches: [ "potato" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        token: ${{ secrets.PAT_TOKEN }}
    - uses: haskell-actions/setup@v2
      with:
        ghc-version: '9.6.2'
        cabal-version: '3.10.1.0'

    - name: Cache
      uses: actions/cache@v3
      env:
        cache-name: cache-cabal
      with:
        path: ~/.cabal
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install dependencies
      run: |  
        cabal update
        cabal build --only-dependencies --enable-tests --enable-benchmarks
    - name: Build
      run: cabal build --enable-tests --enable-benchmarks all
    - name: Run tests
      run: cabal test all --enable-tests
    - name: Check Deps
      run: ldd dist-newstyle/build/x86_64-linux/ghc-9.6.2/tinytools-vty-0.1.0.8/x/tinytools/build/tinytools
      
    - name: Binary Artifact
      uses: actions/upload-artifact@v3
      with:
        name: tinytools
        path: dist-newstyle/build/x86_64-linux/ghc-9.6.2/tinytools-vty-0.1.0.8/x/tinytools/build/tinytools
        retention-days: 5



  parse-cabal-file:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: haskell-actions/parse-cabal-file@v1
      id: cabal_file
      with:
        cabal_file: tinytools-vty.cabal

    - run: echo ${{ steps.cabal_file.outputs.version }}

